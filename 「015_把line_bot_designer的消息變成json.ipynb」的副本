{"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3181,"status":"ok","timestamp":1652867575302,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"p0W867ZhdkdI","outputId":"3c183bf8-6c74-40aa-c6f9-4b88acec5363"},"outputs":[{"name":"stdout","output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["'''\n","\n","資料 mapping 至google drive\n","\n","把資料寫在/content/drive\n","\n","即可保存在 google drive內\n","\n","'''\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3260,"status":"ok","timestamp":1652867578559,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"uB-ssmBtd5ac","outputId":"47803e93-1529-4e69-89bd-d4aeab143aa3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: line-bot-sdk in /usr/local/lib/python3.7/dist-packages (2.2.1)\n","Requirement already satisfied: flask in /usr/local/lib/python3.7/dist-packages (1.1.4)\n","Requirement already satisfied: flask-ngrok in /usr/local/lib/python3.7/dist-packages (0.0.25)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (0.16.0)\n","Requirement already satisfied: requests\u003e=2.0 in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (2.23.0)\n","Requirement already satisfied: aiohttp\u003e=3.7.4 in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (3.8.1)\n","Requirement already satisfied: yarl\u003c2.0,\u003e=1.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (1.7.2)\n","Requirement already satisfied: aiosignal\u003e=1.1.2 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (1.2.0)\n","Requirement already satisfied: frozenlist\u003e=1.1.1 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (1.3.0)\n","Requirement already satisfied: multidict\u003c7.0,\u003e=4.5 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (6.0.2)\n","Requirement already satisfied: asynctest==0.13.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (0.13.0)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (4.2.0)\n","Requirement already satisfied: async-timeout\u003c5.0,\u003e=4.0.0a3 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (4.0.2)\n","Requirement already satisfied: charset-normalizer\u003c3.0,\u003e=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (2.0.12)\n","Requirement already satisfied: attrs\u003e=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp\u003e=3.7.4-\u003eline-bot-sdk) (21.4.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,\u003c1.26,\u003e=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.0-\u003eline-bot-sdk) (1.24.3)\n","Requirement already satisfied: chardet\u003c4,\u003e=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.0-\u003eline-bot-sdk) (3.0.4)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.0-\u003eline-bot-sdk) (2021.10.8)\n","Requirement already satisfied: idna\u003c3,\u003e=2.5 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.0-\u003eline-bot-sdk) (2.10)\n","Requirement already satisfied: click\u003c8.0,\u003e=5.1 in /usr/local/lib/python3.7/dist-packages (from flask) (7.1.2)\n","Requirement already satisfied: Werkzeug\u003c2.0,\u003e=0.15 in /usr/local/lib/python3.7/dist-packages (from flask) (1.0.1)\n","Requirement already satisfied: Jinja2\u003c3.0,\u003e=2.10.1 in /usr/local/lib/python3.7/dist-packages (from flask) (2.11.3)\n","Requirement already satisfied: itsdangerous\u003c2.0,\u003e=0.24 in /usr/local/lib/python3.7/dist-packages (from flask) (1.1.0)\n","Requirement already satisfied: MarkupSafe\u003e=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2\u003c3.0,\u003e=2.10.1-\u003eflask) (2.0.1)\n"]}],"source":["'''\n","\n","'''\n","\n","!pip install line-bot-sdk flask flask-ngrok"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":629,"status":"ok","timestamp":1652867579184,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"JS4BNBZQd7HU"},"outputs":[],"source":["'''\n","引用套件\n","'''\n","\n","# 引用Web Server套件\n","from flask import Flask, request, abort, jsonify\n","\n","# 載入json處理套件\n","import json\n","\n","# 外部連結自動生成套件\n","from flask_ngrok import run_with_ngrok\n","\n","# 從linebot 套件包裡引用 LineBotApi 與 WebhookHandler 類別\n","from linebot import (\n","    LineBotApi, WebhookHandler\n",")\n","\n","# 引用無效簽章錯誤\n","from linebot.exceptions import (\n","    InvalidSignatureError\n",")\n"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1652867579184,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"DQjGb3Hjiy5U"},"outputs":[],"source":["# 設定Server啟用細節\n","app = Flask(__name__,static_url_path = \"/素材\" , static_folder = \"./素材/\")\n","run_with_ngrok(app)\n","\n","# 生成實體物件\n","line_bot_api = LineBotApi(\"lSRXXK98162m7Q+kBr64eBxc9tV9FaNDf5cUXtDF2M8ljxITO86UTkf0MyMROwaA5aU3NGhN7ic+DswXldXarwEhuFaJP2I/T+3/OEGYK6mPkXr9pi8kMKrq9gntscNDRQRe40ZjpoWM/UqW7l1LbAdB04t89/1O/w1cDnyilFU=\")\n","handler = WebhookHandler(\"e3573ac18293efc5912dad6d88db1831\")"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1652867579185,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"gUuI4lVzi5M7"},"outputs":[],"source":["\n","# 啟動server對外接口，使Line能丟消息進來\n","@app.route(\"/\", methods=['POST'])\n","def callback():\n","    # get X-Line-Signature header value\n","    signature = request.headers['X-Line-Signature']\n","\n","    # get request body as text\n","    body = request.get_data(as_text=True)\n","    app.logger.info(\"Request body: \" + body)\n","\n","    # handle webhook body\n","    try:\n","        handler.handle(body, signature)\n","    except InvalidSignatureError:\n","        abort(400)\n","\n","    return 'OK'"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1652867579185,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"iKUrvJ74jQMz"},"outputs":[],"source":["'''\n","消息判斷器\n","讀取指定的json檔案後，把json解析成不同格式的SendMessage\n","讀取檔案，\n","把內容轉換成json\n","將json轉換成消息\n","放回array中，並把array傳出。\n","'''\n","\n","# 引用會用到的套件\n","from linebot.models import (\n","    ImagemapSendMessage,TextSendMessage,ImageSendMessage,LocationSendMessage,FlexSendMessage,VideoSendMessage, StickerSendMessage, AudioSendMessage, FlexSendMessage\n",")\n","\n","from linebot.models.template import (\n","    ButtonsTemplate,CarouselTemplate,ConfirmTemplate,ImageCarouselTemplate\n","    \n",")\n","\n","from linebot.models.template import *\n","\n","def detect_json_array_to_new_message_array(fileName):\n","    \n","    #開啟檔案，轉成json\n","    with open(fileName,encoding='utf8') as f:\n","        jsonArray = json.load(f)\n","    \n","    # 解析json\n","    \"\"\"\n","    先做一個空白的array\n","    判斷裡面的json的type，依據type欄位轉換成xxxSendMessage消息物件\n","    append 先前的空白array\n","    \"\"\"\n","    returnArray = []\n","    for jsonObject in jsonArray:\n","\n","        # 讀取其用來判斷的元件\n","        message_type = jsonObject.get('type')\n","        \n","        # 轉換\n","        if message_type == 'text':\n","            returnArray.append(TextSendMessage.new_from_json_dict(jsonObject))\n","        elif message_type == 'imagemap':\n","            returnArray.append(ImagemapSendMessage.new_from_json_dict(jsonObject))\n","        elif message_type == 'template':\n","            returnArray.append(TemplateSendMessage.new_from_json_dict(jsonObject))\n","        elif message_type == 'image':\n","            returnArray.append(ImageSendMessage.new_from_json_dict(jsonObject))\n","        elif message_type == 'sticker':\n","            returnArray.append(StickerSendMessage.new_from_json_dict(jsonObject))  \n","        elif message_type == 'audio':\n","            returnArray.append(AudioSendMessage.new_from_json_dict(jsonObject))  \n","        elif message_type == 'location':\n","            returnArray.append(LocationSendMessage.new_from_json_dict(jsonObject))\n","        elif message_type == 'flex':\n","            returnArray.append(FlexSendMessage.new_from_json_dict(jsonObject))  \n","        elif message_type == 'video':\n","            returnArray.append(VideoSendMessage.new_from_json_dict(jsonObject))    \n","\n","\n","    # 回傳\n","    return returnArray\n"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1652867579185,"user":{"displayName":"JIA-JING LIU","userId":"14261637597037966153"},"user_tz":-480},"id":"zWhCWzrfjge5"},"outputs":[],"source":["\n","# 引用套件\n","from linebot.models import (\n","    MessageEvent, TextMessage\n",")\n","\n","\n","# 文字消息處理\n","@handler.add(MessageEvent,message=TextMessage)\n","def process_text_message(event):\n","\n","    # 讀取本地檔案，並轉譯成消息\n","    result_message_array =[]\n","\n","    # 用戶輸入文字，就在本地端找相對應的json檔\n","    replyJsonPath = event.message.text+\".json\"\n","    result_message_array = detect_json_array_to_new_message_array(replyJsonPath)\n","\n","    # 發送\n","    line_bot_api.reply_message(\n","        event.reply_token,\n","        result_message_array\n","    )"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"fFwaojqca8F6"},"outputs":[{"name":"stdout","output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":[" * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]},{"name":"stdout","output_type":"stream","text":[" * Running on http://5d84-104-199-189-134.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"]},{"name":"stderr","output_type":"stream","text":["127.0.0.1 - - [18/May/2022 09:53:37] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [18/May/2022 09:53:56] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n"]}],"source":["# 主程序運行\n","app.run()"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"「015_把line_bot_designer的消息變成json.ipynb」的副本","provenance":[{"file_id":"https://github.com/BingHongLi/ai-chatbot-tutorial/blob/main/013_%E6%8A%8Aline_bot_designer%E7%9A%84%E6%B6%88%E6%81%AF%E8%AE%8A%E6%88%90json.ipynb","timestamp":1652867144650}],"version":""},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"}},"nbformat":4,"nbformat_minor":0}