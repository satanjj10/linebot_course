{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"「003_LineChatbot基本組成_關注事件.ipynb」的副本","provenance":[{"file_id":"https://github.com/BingHongLi/ai-chatbot-tutorial/blob/main/003_LineChatbot%E5%9F%BA%E6%9C%AC%E7%B5%84%E6%88%90_%E9%97%9C%E6%B3%A8%E4%BA%8B%E4%BB%B6.ipynb","timestamp":1652849299484}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"code","metadata":{"id":"ylkDvkEfEZIw","executionInfo":{"status":"ok","timestamp":1652845587770,"user_tz":-480,"elapsed":298,"user":{"displayName":"","userId":""}},"outputId":"e316b02e-b30f-4a72-b68e-3561110d2d86","colab":{"base_uri":"https://localhost:8080/","height":36}},"source":["'''\n","\n","掛載Google硬碟\n","安裝套件\n","引用套件\n","APP應用準備\n","消息準備\n","handler執行方法設計\n","啟動應用\n","\n","'''"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\n掛載Google硬碟\\n安裝套件\\n引用套件\\nAPP應用準備\\n消息準備\\nhandler執行方法設計\\n啟動應用\\n\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"2mDqhB78Fxp6","executionInfo":{"status":"ok","timestamp":1652845590011,"user_tz":-480,"elapsed":1973,"user":{"displayName":"","userId":""}},"outputId":"e757d0e0-d877-4dbe-b491-d92c81040ad1","colab":{"base_uri":"https://localhost:8080/"}},"source":["'''\n","\n","資料 mapping 至google drive\n","\n","把資料寫在/content/drive\n","\n","即可保存在 google drive內\n","\n","'''\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"id":"4iGRs1oYD6Ca","executionInfo":{"status":"ok","timestamp":1652845590012,"user_tz":-480,"elapsed":7,"user":{"displayName":"","userId":""}},"outputId":"28b3297b-152a-4677-a64e-a4e4e56387c9","colab":{"base_uri":"https://localhost:8080/","height":36}},"source":["'''\n","\n","流程解析\n","\n","引用套件=>建置APP主邏輯=>生成準備傳給客戶的消息(可把消息存在資料庫，之後提取出來)=>設置收到消息要怎麼處理=>運行APP\n","\n","'''\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\n流程解析\\n\\n引用套件=>建置APP主邏輯=>生成準備傳給客戶的消息(可把消息存在資料庫，之後提取出來)=>設置收到消息要怎麼處理=>運行APP\\n\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"JyhJqq8KImyR","executionInfo":{"status":"ok","timestamp":1652845593036,"user_tz":-480,"elapsed":3029,"user":{"displayName":"","userId":""}},"outputId":"36d4efcc-5984-42eb-acfa-97e7f8db95f0","colab":{"base_uri":"https://localhost:8080/"}},"source":["# 安裝套件\n","!pip install line-bot-sdk flask flask-ngrok"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: line-bot-sdk in /usr/local/lib/python3.7/dist-packages (2.2.1)\n","Requirement already satisfied: flask in /usr/local/lib/python3.7/dist-packages (1.1.4)\n","Requirement already satisfied: flask-ngrok in /usr/local/lib/python3.7/dist-packages (0.0.25)\n","Requirement already satisfied: requests>=2.0 in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (2.23.0)\n","Requirement already satisfied: aiohttp>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (3.8.1)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from line-bot-sdk) (0.16.0)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (4.0.2)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (1.2.0)\n","Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (4.2.0)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (1.7.2)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (6.0.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (1.3.0)\n","Requirement already satisfied: asynctest==0.13.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (0.13.0)\n","Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (2.0.12)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.7.4->line-bot-sdk) (21.4.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0->line-bot-sdk) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0->line-bot-sdk) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0->line-bot-sdk) (2021.10.8)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0->line-bot-sdk) (1.24.3)\n","Requirement already satisfied: itsdangerous<2.0,>=0.24 in /usr/local/lib/python3.7/dist-packages (from flask) (1.1.0)\n","Requirement already satisfied: Werkzeug<2.0,>=0.15 in /usr/local/lib/python3.7/dist-packages (from flask) (1.0.1)\n","Requirement already satisfied: Jinja2<3.0,>=2.10.1 in /usr/local/lib/python3.7/dist-packages (from flask) (2.11.3)\n","Requirement already satisfied: click<8.0,>=5.1 in /usr/local/lib/python3.7/dist-packages (from flask) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2<3.0,>=2.10.1->flask) (2.0.1)\n"]}]},{"cell_type":"code","metadata":{"id":"rJDNE2TYEaYA"},"source":["'''\n","引用套件\n","'''\n","\n","# 引用Web Server套件\n","from flask import Flask, request, abort, jsonify\n","\n","# 載入json處理套件\n","import json\n","\n","# 外部連結自動生成套件\n","from flask_ngrok import run_with_ngrok\n","\n","# 從linebot 套件包裡引用 LineBotApi 與 WebhookHandler 類別\n","from linebot import (\n","    LineBotApi, WebhookHandler\n",")\n","\n","# 引用無效簽章錯誤\n","from linebot.exceptions import (\n","    InvalidSignatureError\n",")\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XssY97Y9Eahe"},"source":["'''\n","建置主程序app\n","\n","建置handler與 line_bot_api\n","\n","準備好application=>再準備handler，用來接收Line傳來的一切事務，順便做驗證用，就像小秘書，過濾信件\n","準備line_bot_api，有些業務需要跟Line溝通，都會透過line_bot_api，回信、取個資\n","'''\n","\n","# 設定Server啟用細節\n","app = Flask(__name__,static_url_path = \"/material\" , static_folder = \"./material/\")\n","run_with_ngrok(app)\n","\n","# 生成實體物件\n","line_bot_api = LineBotApi(\"lSRXXK98162m7Q+kBr64eBxc9tV9FaNDf5cUXtDF2M8ljxITO86UTkf0MyMROwaA5aU3NGhN7ic+DswXldXarwEhuFaJP2I/T+3/OEGYK6mPkXr9pi8kMKrq9gntscNDRQRe40ZjpoWM/UqW7l1LbAdB04t89/1O/w1cDnyilFU=\")\n","handler = WebhookHandler(\"e3573ac18293efc5912dad6d88db1831\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jyIFMBi4EvTl"},"source":["'''\n","建置主程序的API入口\n","  接受Line傳過來的消息\n","  並取出消息內容\n","  將消息內容存在google drive的檔案內\n","  並請handler 進行消息驗證與轉發\n","\n","當流量消息丟給我們ngrok.xxx/，就會觸發Line消息的處理流程\n","'''\n","\n","# 啟動server對外接口，使Line能丟消息進來\n","@app.route(\"/\", methods=['POST'])\n","def callback():\n","    # get X-Line-Signature header value\n","    # 每一個line都會回傳一個加密簽章\n","    signature = request.headers['X-Line-Signature']\n","\n","    # get request body as text\n","    # 用戶傳來的內容\n","    body = request.get_data(as_text=True)\n","    print(body)\n","\n","    # 記錄用戶log\n","    # 存在google drive上，一個AI event.log檔案\n","    f = open(\"/content/drive/MyDrive/ai-event.log\", \"a\")\n","    f.write(body)\n","    f.close()\n","\n","    # handle webhook body\n","    # 把消息交給handler做驗證\n","    # 會看是什麼樣的event，做呼應的處理\n","    try:\n","                handler.handle(body, signature)\n","    except InvalidSignatureError:\n","        abort(400)\n","\n","    return 'OK'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YhyKB6njFHJC"},"source":["\n","'''\n","用戶關注，就是follow event\n","\n","撰寫用戶關注時，我們要處理的商業邏輯\n","\n","1. 取得用戶個資，並存回伺服器\n","2. 回應用戶，歡迎用的文字消息\n","\n","'''\n","\n","\n","# 載入Follow事件\n","from linebot.models.events import (\n","    FollowEvent\n",")\n","\n","from linebot.models import(\n","    TextSendMessage, ImageSendMessage\n",")\n","\n","# 告知handler，如果收到FollowEvent，則做下面的方法處理\n","# 告知handler，如果收到FollowEvent，就執行下面的方法\n","@handler.add(FollowEvent)\n","def reply_text_and_get_user_profile(event):\n","    \n","    # 取出消息內User的資料\n","    # 用line_bot_api跟line溝通，取得個資get_profile(event.source.user_id)\n","    # event是每一次傳來的消息\n","    # source來源\n","    # user_id發消息的用戶ID\n","    user_profile = line_bot_api.get_profile(event.source.user_id)\n","        \n","     # 將用戶資訊存在檔案內\n","     # 存在google drive的users.txt\n","    with open(\"/content/drive/MyDrive/users.txt\", \"a\") as myfile:\n","        myfile.write(json.dumps(vars(user_profile),sort_keys=True))\n","        myfile.write('\\n')\n","    \n","    # 回覆文字消息與圖片消息\n","    # 請line_bot_api回應消息給line，line轉發回去給客戶\n","    # reply_message(reply_token)\n","    # 每一次用戶傳給line，line轉傳過來的時候，附上這個臨時票卷，我們必須拿這個票卷，跟line回應\n","    # TextSendMessage(\"回應的文字\")\n","    line_bot_api.reply_message(\n","        event.reply_token,\n","        [TextSendMessage('安安，你的個資已被我紀錄了')]\n","    )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NVkYb65fHY9W","outputId":"f1a8cef1-6f4e-41fd-cb03-1df26165a8df"},"source":["# 運行主程序\n","app.run()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"output_type":"stream","name":"stderr","text":[" * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]},{"output_type":"stream","name":"stdout","text":[" * Running on http://2214-35-231-8-170.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n","{\"destination\":\"U9b0c09d2905ecf335b8f6e4121a9c993\",\"events\":[{\"type\":\"follow\",\"webhookEventId\":\"01G3AMGMTRV5DYCQA66E9BTYHV\",\"deliveryContext\":{\"isRedelivery\":false},\"timestamp\":1652845728094,\"source\":{\"type\":\"user\",\"userId\":\"Uf57398b2870127a0567cc1fc518d93e0\"},\"replyToken\":\"48011824cf164004b3a8b5e9b4417b35\",\"mode\":\"active\"}]}\n"]},{"output_type":"stream","name":"stderr","text":["127.0.0.1 - - [18/May/2022 03:48:50] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n"]}]}]}